<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" total="24" passed="21">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="244457" started-at="2022-09-01T10:00:00Z" finished-at="2022-09-01T10:04:04Z">
    <groups>
    </groups>
    <test name="Homepage" duration-ms="13744" started-at="2022-09-01T10:00:00Z" finished-at="2022-09-01T10:00:13Z">
      <class name="com.boddess.testscript.Homepage">
        <test-method status="PASS" signature="Header_Links()[pri:0, instance:com.boddess.testscript.Homepage@2752f6e2]" name="Header_Links" duration-ms="348" started-at="2022-09-01T15:30:00Z" description="Homepage&gt;&gt; Test Case No.1&gt;&gt; Verify Boddess logo on Homepage" finished-at="2022-09-01T15:30:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Header_Links -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.boddess.testscript.Homepage@2752f6e2]" name="getResult" is-config="true" duration-ms="7" started-at="2022-09-01T15:30:00Z" finished-at="2022-09-01T15:30:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Header_Links status=SUCCESS method=Homepage.Header_Links()[pri:0, instance:com.boddess.testscript.Homepage@2752f6e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="Header_Links1()[pri:0, instance:com.boddess.testscript.Homepage@2752f6e2]" name="Header_Links1" duration-ms="446" started-at="2022-09-01T15:30:00Z" description="Homepage&gt;&gt;Test Case No.2&gt;&gt; Verify Boddess categories on Homepage" finished-at="2022-09-01T15:30:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Header_Links1 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.boddess.testscript.Homepage@2752f6e2]" name="getResult" is-config="true" duration-ms="1" started-at="2022-09-01T15:30:00Z" finished-at="2022-09-01T15:30:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Header_Links1 status=SUCCESS method=Homepage.Header_Links1()[pri:0, instance:com.boddess.testscript.Homepage@2752f6e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="cat_Navigation()[pri:0, instance:com.boddess.testscript.Homepage@2752f6e2]" name="cat_Navigation" duration-ms="12928" started-at="2022-09-01T15:30:00Z" description="Homepage&gt;&gt;Test Case No.3&gt;&gt; Verify category navigations" finished-at="2022-09-01T15:30:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cat_Navigation -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.boddess.testscript.Homepage@2752f6e2]" name="getResult" is-config="true" duration-ms="1" started-at="2022-09-01T15:30:13Z" finished-at="2022-09-01T15:30:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cat_Navigation status=SUCCESS method=Homepage.cat_Navigation()[pri:0, instance:com.boddess.testscript.Homepage@2752f6e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.boddess.testscript.Homepage -->
    </test> <!-- Homepage -->
    <test name="Login_Reg" duration-ms="95" started-at="2022-09-01T10:00:13Z" finished-at="2022-09-01T10:00:14Z">
      <class name="com.boddess.testscript.Login_Reg">
        <test-method status="FAIL" signature="Login()[pri:0, instance:com.boddess.testscript.Login_Reg@17f6480]" name="Login" duration-ms="84" started-at="2022-09-01T15:30:13Z" description="Login and Reg&gt;&gt; Verify user is able to login" finished-at="2022-09-01T15:30:14Z">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[Element <a href="https://www.boddess.com/customer/account/login/referer/aHR0cHM6Ly93d3cuYm9kZGVzcy5jb20vZnJhZ3JhbmNl/"> is not clickable at point (1200,37) because another element <li class="authorization-link"> obscures it
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'AYUSH-HOB', ip: '172.17.42.72', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_341'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 103.0.2, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20220808125904, moz:geckodriverVersion: 0.30.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 13000, moz:profile: C:\Users\AYUSH~1.SHA\AppDat..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 6f9cd898-a465-4b55-8e9f-4948a07de5d3]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: Element <a href="https://www.boddess.com/customer/account/login/referer/aHR0cHM6Ly93d3cuYm9kZGVzcy5jb20vZnJhZ3JhbmNl/"> is not clickable at point (1200,37) because another element <li class="authorization-link"> obscures it
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'AYUSH-HOB', ip: '172.17.42.72', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_341'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 103.0.2, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20220808125904, moz:geckodriverVersion: 0.30.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 13000, moz:profile: C:\Users\AYUSH~1.SHA\AppDat..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 6f9cd898-a465-4b55-8e9f-4948a07de5d3
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:276)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:83)
	at com.boddess.testscript.Login_Reg.Login(Login_Reg.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.boddess.testscript.Login_Reg@17f6480]" name="getResult" is-config="true" duration-ms="4" started-at="2022-09-01T15:30:14Z" finished-at="2022-09-01T15:30:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Login status=FAILURE method=Login_Reg.Login()[pri:0, instance:com.boddess.testscript.Login_Reg@17f6480] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.boddess.testscript.Login_Reg -->
    </test> <!-- Login_Reg -->
    <test name="PLP" duration-ms="120914" started-at="2022-09-01T10:00:14Z" finished-at="2022-09-01T10:02:14Z">
      <class name="com.boddess.testscript.PLP">
        <test-method status="PASS" signature="bread_plp()[pri:0, instance:com.boddess.testscript.PLP@67b64c45]" name="bread_plp" duration-ms="348" started-at="2022-09-01T15:30:14Z" description="PLP&gt;&gt;Test No.2 Verifying Breadcrumb on PLP Page" finished-at="2022-09-01T15:30:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bread_plp -->
        <test-method status="FAIL" signature="static_plp()[pri:0, instance:com.boddess.testscript.PLP@67b64c45]" name="static_plp" duration-ms="120564" started-at="2022-09-01T15:30:14Z" description="PLP&gt;&gt;Test No.4 Verifying Static Text on PLP Page" finished-at="2022-09-01T15:32:14Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of element located by By.xpath: //a[@id='ui-id-45'] (tried for 120 second(s) with 500 milliseconds interval)
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'AYUSH-HOB', ip: '172.17.42.72', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_341'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 103.0.2, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20220808125904, moz:geckodriverVersion: 0.30.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 13000, moz:profile: C:\Users\AYUSH~1.SHA\AppDat..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 6f9cd898-a465-4b55-8e9f-4948a07de5d3]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.xpath: //a[@id='ui-id-45'] (tried for 120 second(s) with 500 milliseconds interval)
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'AYUSH-HOB', ip: '172.17.42.72', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_341'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 103.0.2, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20220808125904, moz:geckodriverVersion: 0.30.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 13000, moz:profile: C:\Users\AYUSH~1.SHA\AppDat..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 6f9cd898-a465-4b55-8e9f-4948a07de5d3
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:81)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
	at com.boddess.utilities.Setup.wait(Setup.java:47)
	at com.boddess.testscript.PLP.static_plp(PLP.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- static_plp -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.boddess.testscript.PLP@67b64c45]" name="getResult" is-config="true" duration-ms="0" started-at="2022-09-01T15:30:14Z" finished-at="2022-09-01T15:30:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=bread_plp status=SUCCESS method=PLP.bread_plp()[pri:0, instance:com.boddess.testscript.PLP@67b64c45] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.boddess.testscript.PLP@67b64c45]" name="getResult" is-config="true" duration-ms="0" started-at="2022-09-01T15:32:14Z" finished-at="2022-09-01T15:32:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=static_plp status=FAILURE method=PLP.static_plp()[pri:0, instance:com.boddess.testscript.PLP@67b64c45] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.boddess.testscript.PLP -->
    </test> <!-- PLP -->
    <test name="PDP" duration-ms="13405" started-at="2022-09-01T10:02:14Z" finished-at="2022-09-01T10:02:28Z">
      <class name="com.boddess.testscript.PDP">
        <test-method status="PASS" signature="prd_name()[pri:0, instance:com.boddess.testscript.PDP@6108b2d7]" name="prd_name" duration-ms="497" started-at="2022-09-01T15:32:14Z" description="PDP&gt;&gt;Test No.1 Verifying item name displayed on PDP Page" finished-at="2022-09-01T15:32:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prd_name -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.boddess.testscript.PDP@6108b2d7]" name="getResult" is-config="true" duration-ms="0" started-at="2022-09-01T15:32:15Z" finished-at="2022-09-01T15:32:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=prd_name status=SUCCESS method=PDP.prd_name()[pri:0, instance:com.boddess.testscript.PDP@6108b2d7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="qty_addtoCart()[pri:0, instance:com.boddess.testscript.PDP@6108b2d7]" name="qty_addtoCart" duration-ms="183" started-at="2022-09-01T15:32:15Z" description="PDP&gt;&gt;Test No.2 Verifying Quantity and Add to cart" finished-at="2022-09-01T15:32:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- qty_addtoCart -->
        <test-method status="PASS" signature="social()[pri:0, instance:com.boddess.testscript.PDP@6108b2d7]" name="social" duration-ms="166" started-at="2022-09-01T15:32:15Z" description="PDP&gt;&gt;Test No.3 Verifying Social Media icon displayed on PDP Page" finished-at="2022-09-01T15:32:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- social -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.boddess.testscript.PDP@6108b2d7]" name="getResult" is-config="true" duration-ms="0" started-at="2022-09-01T15:32:15Z" finished-at="2022-09-01T15:32:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=qty_addtoCart status=SUCCESS method=PDP.qty_addtoCart()[pri:0, instance:com.boddess.testscript.PDP@6108b2d7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="prices_pdp()[pri:0, instance:com.boddess.testscript.PDP@6108b2d7]" name="prices_pdp" duration-ms="29" started-at="2022-09-01T15:32:15Z" description="PDP&gt;&gt;Test No.4 Verifying Prices on PDP" finished-at="2022-09-01T15:32:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prices_pdp -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.boddess.testscript.PDP@6108b2d7]" name="getResult" is-config="true" duration-ms="0" started-at="2022-09-01T15:32:15Z" finished-at="2022-09-01T15:32:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=social status=SUCCESS method=PDP.social()[pri:0, instance:com.boddess.testscript.PDP@6108b2d7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.boddess.testscript.PDP@6108b2d7]" name="getResult" is-config="true" duration-ms="1" started-at="2022-09-01T15:32:15Z" finished-at="2022-09-01T15:32:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=prices_pdp status=SUCCESS method=PDP.prices_pdp()[pri:0, instance:com.boddess.testscript.PDP@6108b2d7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="wish()[pri:0, instance:com.boddess.testscript.PDP@6108b2d7]" name="wish" duration-ms="8413" started-at="2022-09-01T15:32:15Z" description="PDP&gt;&gt;Test No.5&gt;&gt; Verify add to Wishlist is displayed" finished-at="2022-09-01T15:32:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wish -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.boddess.testscript.PDP@6108b2d7]" name="getResult" is-config="true" duration-ms="1" started-at="2022-09-01T15:32:24Z" finished-at="2022-09-01T15:32:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wish status=SUCCESS method=PDP.wish()[pri:0, instance:com.boddess.testscript.PDP@6108b2d7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="Product_Image()[pri:0, instance:com.boddess.testscript.PDP@6108b2d7]" name="Product_Image" duration-ms="64" started-at="2022-09-01T15:32:24Z" description="PDP Page&gt;&gt; Test Case No.6&gt;&gt; Verify Product image displayed" finished-at="2022-09-01T15:32:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Product_Image -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.boddess.testscript.PDP@6108b2d7]" name="getResult" is-config="true" duration-ms="0" started-at="2022-09-01T15:32:24Z" finished-at="2022-09-01T15:32:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Product_Image status=SUCCESS method=PDP.Product_Image()[pri:0, instance:com.boddess.testscript.PDP@6108b2d7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="Pincode_Validation()[pri:0, instance:com.boddess.testscript.PDP@6108b2d7]" name="Pincode_Validation" duration-ms="3426" started-at="2022-09-01T15:32:24Z" description="PDP Page&gt;&gt; Test Case No. 7&gt;&gt; Pincode validation" finished-at="2022-09-01T15:32:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pincode_Validation -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.boddess.testscript.PDP@6108b2d7]" name="getResult" is-config="true" duration-ms="0" started-at="2022-09-01T15:32:27Z" finished-at="2022-09-01T15:32:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Pincode_Validation status=SUCCESS method=PDP.Pincode_Validation()[pri:0, instance:com.boddess.testscript.PDP@6108b2d7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="ProductDetailSection()[pri:0, instance:com.boddess.testscript.PDP@6108b2d7]" name="ProductDetailSection" duration-ms="110" started-at="2022-09-01T15:32:27Z" description="PDP Page&gt;&gt; Test Case No. 8&gt;&gt; Verify Product Detail Section" finished-at="2022-09-01T15:32:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductDetailSection -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.boddess.testscript.PDP@6108b2d7]" name="getResult" is-config="true" duration-ms="1" started-at="2022-09-01T15:32:27Z" finished-at="2022-09-01T15:32:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ProductDetailSection status=SUCCESS method=PDP.ProductDetailSection()[pri:0, instance:com.boddess.testscript.PDP@6108b2d7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="breadcrumbs_pdp()[pri:0, instance:com.boddess.testscript.PDP@6108b2d7]" name="breadcrumbs_pdp" duration-ms="62" started-at="2022-09-01T15:32:27Z" description="PDP&gt;&gt;Test No.9 Verifying Breadcrumbs" finished-at="2022-09-01T15:32:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- breadcrumbs_pdp -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.boddess.testscript.PDP@6108b2d7]" name="getResult" is-config="true" duration-ms="1" started-at="2022-09-01T15:32:27Z" finished-at="2022-09-01T15:32:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=breadcrumbs_pdp status=SUCCESS method=PDP.breadcrumbs_pdp()[pri:0, instance:com.boddess.testscript.PDP@6108b2d7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="Pincode_Validation_correct()[pri:0, instance:com.boddess.testscript.PDP@6108b2d7]" name="Pincode_Validation_correct" duration-ms="449" started-at="2022-09-01T15:32:27Z" description="PDP Page&gt;&gt; Test Case No. 10&gt;&gt; Pincode validation check by correct pincode" finished-at="2022-09-01T15:32:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pincode_Validation_correct -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.boddess.testscript.PDP@6108b2d7]" name="getResult" is-config="true" duration-ms="0" started-at="2022-09-01T15:32:28Z" finished-at="2022-09-01T15:32:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Pincode_Validation_correct status=SUCCESS method=PDP.Pincode_Validation_correct()[pri:0, instance:com.boddess.testscript.PDP@6108b2d7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.boddess.testscript.PDP -->
    </test> <!-- PDP -->
    <test name="My Account" duration-ms="11849" started-at="2022-09-01T10:02:28Z" finished-at="2022-09-01T10:02:40Z">
      <class name="com.boddess.testscript.MyAccount">
        <test-method status="PASS" signature="ContactDetails()[pri:0, instance:com.boddess.testscript.MyAccount@3498ed]" name="ContactDetails" duration-ms="10789" started-at="2022-09-01T15:32:28Z" description="My Account&gt;&gt; Test Case No.1&gt;&gt;Verify if contact information is being displayed" finished-at="2022-09-01T15:32:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ContactDetails -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.boddess.testscript.MyAccount@3498ed]" name="getResult" is-config="true" duration-ms="0" started-at="2022-09-01T15:32:39Z" finished-at="2022-09-01T15:32:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ContactDetails status=SUCCESS method=MyAccount.ContactDetails()[pri:0, instance:com.boddess.testscript.MyAccount@3498ed] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="ChangePassword()[pri:0, instance:com.boddess.testscript.MyAccount@3498ed]" name="ChangePassword" duration-ms="298" started-at="2022-09-01T15:32:39Z" description="My Account&gt;&gt; Test Case No.1&gt;&gt;Verify if change password and edit is being displayed" finished-at="2022-09-01T15:32:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangePassword -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.boddess.testscript.MyAccount@3498ed]" name="getResult" is-config="true" duration-ms="1" started-at="2022-09-01T15:32:39Z" finished-at="2022-09-01T15:32:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangePassword status=SUCCESS method=MyAccount.ChangePassword()[pri:0, instance:com.boddess.testscript.MyAccount@3498ed] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="Newsletter()[pri:0, instance:com.boddess.testscript.MyAccount@3498ed]" name="Newsletter" duration-ms="325" started-at="2022-09-01T15:32:39Z" description="My Account&gt;&gt; Test Case No.1&gt;&gt;Verify if newsletter is being displayed" finished-at="2022-09-01T15:32:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Newsletter -->
        <test-method status="PASS" signature="DefaultBillingAddress()[pri:0, instance:com.boddess.testscript.MyAccount@3498ed]" name="DefaultBillingAddress" duration-ms="144" started-at="2022-09-01T15:32:39Z" description="My Account&gt;&gt; Test Case No.1&gt;&gt;Verify if default billing address are being displayed" finished-at="2022-09-01T15:32:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DefaultBillingAddress -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.boddess.testscript.MyAccount@3498ed]" name="getResult" is-config="true" duration-ms="0" started-at="2022-09-01T15:32:39Z" finished-at="2022-09-01T15:32:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Newsletter status=SUCCESS method=MyAccount.Newsletter()[pri:0, instance:com.boddess.testscript.MyAccount@3498ed] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.boddess.testscript.MyAccount@3498ed]" name="getResult" is-config="true" duration-ms="1" started-at="2022-09-01T15:32:39Z" finished-at="2022-09-01T15:32:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DefaultBillingAddress status=SUCCESS method=MyAccount.DefaultBillingAddress()[pri:0, instance:com.boddess.testscript.MyAccount@3498ed] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="DefaultShippingAddress()[pri:0, instance:com.boddess.testscript.MyAccount@3498ed]" name="DefaultShippingAddress" duration-ms="170" started-at="2022-09-01T15:32:39Z" description="My Account&gt;&gt; Test Case No.1&gt;&gt;Verify if default shipping address is being displayed" finished-at="2022-09-01T15:32:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DefaultShippingAddress -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.boddess.testscript.MyAccount@3498ed]" name="getResult" is-config="true" duration-ms="1" started-at="2022-09-01T15:32:40Z" finished-at="2022-09-01T15:32:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DefaultShippingAddress status=SUCCESS method=MyAccount.DefaultShippingAddress()[pri:0, instance:com.boddess.testscript.MyAccount@3498ed] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="ManageAddressLink()[pri:0, instance:com.boddess.testscript.MyAccount@3498ed]" name="ManageAddressLink" duration-ms="118" started-at="2022-09-01T15:32:40Z" description="My Account&gt;&gt; Test Case No.1&gt;&gt;Verify if manage address link is being displayed" finished-at="2022-09-01T15:32:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ManageAddressLink -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.boddess.testscript.MyAccount@3498ed]" name="getResult" is-config="true" duration-ms="1" started-at="2022-09-01T15:32:40Z" finished-at="2022-09-01T15:32:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ManageAddressLink status=SUCCESS method=MyAccount.ManageAddressLink()[pri:0, instance:com.boddess.testscript.MyAccount@3498ed] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.boddess.testscript.MyAccount -->
    </test> <!-- My Account -->
    <test name="LoginCheckout" duration-ms="55088" started-at="2022-09-01T10:02:40Z" finished-at="2022-09-01T10:03:35Z">
      <class name="com.boddess.testscript.LoginCheckout">
        <test-method status="PASS" signature="Login()[pri:0, instance:com.boddess.testscript.LoginCheckout@3cda1055]" name="Login" duration-ms="55087" started-at="2022-09-01T15:32:40Z" description="Verify the checkout and OTP sent msg" finished-at="2022-09-01T15:33:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.boddess.testscript.LoginCheckout@3cda1055]" name="getResult" is-config="true" duration-ms="0" started-at="2022-09-01T15:33:35Z" finished-at="2022-09-01T15:33:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Login status=SUCCESS method=LoginCheckout.Login()[pri:0, instance:com.boddess.testscript.LoginCheckout@3cda1055] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.boddess.testscript.LoginCheckout -->
    </test> <!-- LoginCheckout -->
    <test name="PrePaidCheckout" duration-ms="29259" started-at="2022-09-01T10:03:35Z" finished-at="2022-09-01T10:04:04Z">
      <class name="com.boddess.testscript.PrepaidCheckout">
        <test-method status="PASS" signature="report()[pri:0, instance:com.boddess.testscript.PrepaidCheckout@2ed94a8b]" name="report" is-config="true" duration-ms="9035" started-at="2022-09-01T15:29:51Z" finished-at="2022-09-01T15:30:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method status="FAIL" signature="PrePaidCheckout()[pri:0, instance:com.boddess.testscript.PrepaidCheckout@2ed94a8b]" name="PrePaidCheckout" duration-ms="29256" started-at="2022-09-01T15:33:35Z" description="Checkout&gt;&gt; Test Case No.2&gt;&gt;Verify if user is redirected to PayU page for prepaid order" finished-at="2022-09-01T15:34:04Z">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[Element <span> is not clickable at point (547,419) because another element <div id="checkout-loader" class="loading-mask"> obscures it
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'AYUSH-HOB', ip: '172.17.42.72', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_341'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 103.0.2, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20220808125904, moz:geckodriverVersion: 0.30.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 13000, moz:profile: C:\Users\AYUSH~1.SHA\AppDat..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 6f9cd898-a465-4b55-8e9f-4948a07de5d3]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: Element <span> is not clickable at point (547,419) because another element <div id="checkout-loader" class="loading-mask"> obscures it
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'AYUSH-HOB', ip: '172.17.42.72', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_341'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 103.0.2, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20220808125904, moz:geckodriverVersion: 0.30.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 13000, moz:profile: C:\Users\AYUSH~1.SHA\AppDat..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 6f9cd898-a465-4b55-8e9f-4948a07de5d3
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:276)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:83)
	at com.boddess.testscript.PrepaidCheckout.PrePaidCheckout(PrepaidCheckout.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PrePaidCheckout -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.boddess.testscript.PrepaidCheckout@2ed94a8b]" name="getResult" is-config="true" duration-ms="2" started-at="2022-09-01T15:34:04Z" finished-at="2022-09-01T15:34:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PrePaidCheckout status=FAILURE method=PrepaidCheckout.PrePaidCheckout()[pri:0, instance:com.boddess.testscript.PrepaidCheckout@2ed94a8b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:com.boddess.testscript.PrepaidCheckout@2ed94a8b]" name="endReport" is-config="true" duration-ms="6211" started-at="2022-09-01T15:34:04Z" finished-at="2022-09-01T15:34:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- com.boddess.testscript.PrepaidCheckout -->
    </test> <!-- PrePaidCheckout -->
  </suite> <!-- Suite -->
</testng-results>
